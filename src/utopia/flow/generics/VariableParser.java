package utopia.flow.generics;

/**
 * Variable parsers are able to construct variables
 * @author Mikko Hilpinen
 * @since 30.4.2016
 * @param <VariableType> The type of variable generated by this parser
 */
public interface VariableParser<VariableType extends Variable>
{
	/**
	 * Creates a new variable. The parser needs to determine the data type and default value 
	 * of the new variable
	 * @param variableName the name of the new variable
	 * @return The generated variable
	 * @throws VariableGenerationFailedException If the variable couldn't be generated
	 */
	public VariableType generate(String variableName) throws VariableGenerationFailedException;
	
	/**
	 * Creates a new variable. The variable should have the provided value or some version 
	 * of it.
	 * @param variableName the name of the new variable
	 * @param value The value offered to be assigned to the variable
	 * @return The generated variable
	 * @throws VariableGenerationFailedException If the variable couldn't be generated
	 */
	public VariableType generate(String variableName, Value value) throws VariableGenerationFailedException;
	
	/**
	 * Copies an existing variable
	 * @param variable a variable
	 * @return a copy of that variable
	 * @throws VariableGenerationFailedException If the variable couldn't be generated
	 */
	public VariableType copy(VariableType variable) throws VariableGenerationFailedException;
	
	
	// NESTED CLASSES	--------------
	
	/**
	 * These exceptions are thrown when a variable parser can't / won't generate a variable 
	 * when requested
	 * @author Mikko Hilpinen
	 * @since 30.4.2016
	 */
	public static class VariableGenerationFailedException extends RuntimeException
	{
		private static final long serialVersionUID = -1091339985074006138L;

		/**
		 * Creates a new exception
		 * @param message The description on why the variable generation failed
		 */
		public VariableGenerationFailedException(String message)
		{
			super(message);
		}
		
		/**
		 * Creates a new exception
		 * @param message a message sent along with the exception
		 * @param cause The cause of failure
		 */
		public VariableGenerationFailedException(String message, Throwable cause)
		{
			super(message, cause);
		}
	}
}
